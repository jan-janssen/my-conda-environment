name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  createrelease:
    name: createrelease
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v1
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +%F)"
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.date }}
        release_name: Release ${{ steps.date.outputs.date }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Date File 
      run: echo "${{ steps.date.outputs.date }}" > date.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
    - name: Save Date File for publish
      uses: actions/upload-artifact@v1
      with:
        name: date
        path: date.txt

  build_linux:
    name: Linux 
    needs: [createrelease]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v1
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date/date.txt`
        echo ::set-output name=date::$value
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: "3.12"
        miniforge-variant: Mambaforge
        channels: conda-forge
        channel-priority: strict
        activate-environment: my-env
        environment-file: .ci_support/environment.yml
        use-mamba: true
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 30
      run: |
        python .ci_support/dryrun.py generalenv/environment.yml env-linux-x64-${{ steps.get_date_info.outputs.date }}.yml
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: env-linux-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_name: env-linux-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_content_type: text/plain

  build_mac:
    name: MacOsX
    needs: [createrelease]
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v1
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date/date.txt`
        echo ::set-output name=date::$value
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: "3.12"
        miniforge-variant: Mambaforge
        channels: conda-forge
        channel-priority: strict
        activate-environment: my-env
        environment-file: .ci_support/environment.yml
        use-mamba: true
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 30
      run: |
        python .ci_support/dryrun.py generalenv/environment.yml env-osx-x64-${{ steps.get_date_info.outputs.date }}.yml 
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: env-osx-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_name: env-osx-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_content_type: text/plain
